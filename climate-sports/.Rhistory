setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
install.packages("readxl", "stringr", "readr", "ggplot2", "tidyverse", "tidyr", "dplyr",
"readr", "lubridate", "gganimate", "scales", "tigris", "sf",
"tidycensus", "transformr", "xlsx")
library(ggplot2)
library(readr)
library(dplyr)
library(scales)
library(tidyverse)
library(tidycensus)
library(tigris)
library(stringr)
library(gganimate)
library(transformr)
library(readxl)
require(tidyr)
library(purrr)
library(purrrlyr)
library(xlsx)
# download the data
download.file("https://data.cdc.gov/api/views/km4m-vcsb/rows.csv?accessType=DOWNLOAD", destfile = paste0(getwd(), "/natl_vaxrates.csv"))
download.file("https://data.cdc.gov/api/views/km4m-vcsb/rows.csv?accessType=DOWNLOAD", destfile = paste0(getwd(), "/natl_vaxrates.csv"))
download.file("https://data.cdc.gov/api/views/4ht3-nbmd/rows.csv?accessType=DOWNLOAD", destfile = paste0(getwd(), "/pregnant_vaxrates.csv"))
pregnant_vax_raw <-  read_csv("pregnant_vaxrates.csv",
col_types = cols(`Date Reported to CDC` = col_date(format = "%m/%d/%Y")))
natl_vax_raw <- read_csv("natl_vaxrates.csv",
col_types = cols(Date = col_date(format = "%m/%d/%Y")))
pregnant_vax_rates <- pregnant_vax_raw %>%
filter(`Race and Ethnicity` == "All Races/Ethnicity",
`Vaccination Coverage Status` == "Fully Vaccinated",
`Pregnancy Status at Vaccination` == "Any")
natl_vax_rates_1849 <- natl_vax_raw %>%
select(Date, Demographic_category, Series_Complete_Yes, Series_Complete_Pop_pct_agegroup) %>%
filter(Demographic_category %in% c("Ages_18-24_yrs", "Ages_25-39_yrs", "Ages_40-49_yrs")) %>%
mutate(denom = (100 * Series_Complete_Yes)/Series_Complete_Pop_pct_agegroup)
weekly_natl_vax <- natl_vax_rates_1849 %>%
group_by(Date) %>%
summarise(full_vax = sum(Series_Complete_Yes),
agegroup_pop = sum(denom)) %>%
mutate(pct_fully_vax = full_vax/agegroup_pop)
weekly_pregnant_vax <- pregnant_vax_rates %>%
select(`Date Reported to CDC`, `Vaccination Coverage Percentage (%)`) %>%
group_by(`Date Reported to CDC`)
natl_and_preg <- left_join(weekly_pregnant_vax, weekly_natl_vax, by = c("Date Reported to CDC" = "Date")) %>%
rename(date = `Date Reported to CDC`)
natl_and_preg_clean <- natl_and_preg %>%
mutate(preg_vaxxed = `Vaccination Coverage Percentage (%)`/100) %>%
select(date, pct_fully_vax, preg_vaxxed)
devtools::install_github("munichrocker/DatawRappr")
devtools::install_github("munichrocker/DatawRappr")
install.packages(DatawRappr)
install.packages("DatawRappr")
library(DatawRappr)
install.packages("devtools")
library(devtools)
devtools::install_github("munichrocker/DatawRappr")
datawrapper_auth(api_key =  "PU52xuCQowgE5BFprvdnpFXzd5Ql9ISOSLBk58eNR2ykPztw0yC5fpqLTfsZdhyR")
install.packages("DatawRappr")
devtools::install_github("munichrocker/DatawRappr")
force = TRUE
library(DatawRappr)
datawrapper_auth(api_key =  "PU52xuCQowgE5BFprvdnpFXzd5Ql9ISOSLBk58eNR2ykPztw0yC5fpqLTfsZdhyR")
dw.account_info()
account_info()
View(natl_and_preg_clean)
test <- natl_and_preg_clean %>%
rename("Percent fully vaccinated, people ages 18-49" = preg_vaxxed)
View(test)
natl_and_preg_clean <- natl_and_preg_clean %>%
rename("Percent fully vaccinated, people ages 18-49" = preg_vaxxed,
"People ages 18-49 who are pregnant or planning to become pregnant" = pct_fully_vax)
dw_data_to_chart(natl_and_preg_clean, "Bhc9M")
natl_and_preg <- natl_and_preg %>%
rename("Percent fully vaccinated, people ages 18-49" = preg_vaxxed,
"People ages 18-49 who are pregnant or planning to become pregnant" = pct_fully_vax)
View(natl_and_preg)
natl_and_preg_clean <- natl_and_preg %>%
rename(preg_vaxxed = `Vaccination Coverage Percentage (%)`) %>%
select(date, pct_fully_vax, preg_vaxxed)
natl_and_preg <- natl_and_preg %>%
rename("Percent fully vaccinated, people ages 18-49" = `Vaccination Coverage Percentage (%)`,
"People ages 18-49 who are pregnant or planning to become pregnant" = pct_fully_vax)
dw_data_to_chart(natl_and_preg_clean, "Bhc9M")
natl_and_preg_clean <- natl_and_preg %>%
rename(preg_vaxxed = `Vaccination Coverage Percentage (%)`/100) %>%
select(date, pct_fully_vax, preg_vaxxed)
dw_data_to_chart(natl_and_preg, "Bhc9M")
natl_and_preg_clean <- natl_and_preg %>%
rename(preg_vaxxed = `Vaccination Coverage Percentage (%)`/100) %>%
select(date, pct_fully_vax, preg_vaxxed)
natl_and_preg_clean <- natl_and_preg %>%
mutate(preg_vaxxed = `Vaccination Coverage Percentage (%)`/100) %>%
select(date, pct_fully_vax, preg_vaxxed)
natl_and_preg_clean <- natl_and_preg %>%
mutate(preg_vaxxed = `Vaccination Coverage Percentage (%)`/100) %>%
select(date, pct_fully_vax, preg_vaxxed)
natl_and_preg_clean <- natl_and_preg %>%
mutate(preg_vaxxed = `Vaccination Coverage Percentage (%)`,
pct_fully_vax = 100*pct_fully_vax) %>%
select(date, pct_fully_vax, preg_vaxxed)
natl_and_preg_clean <- natl_and_preg %>%
mutate(preg_vaxxed = `Vaccination Coverage Percentage (%)`/100) %>%
select(date, pct_fully_vax, preg_vaxxed)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
install.packages("readxl", "stringr", "readr", "ggplot2", "tidyverse", "tidyr", "dplyr",
"readr", "lubridate", "gganimate", "scales", "tigris", "sf",
"tidycensus", "transformr", "xlsx")
install.packages("readxl", "stringr", "readr", "ggplot2", "tidyverse", "tidyr", "dplyr", "readr", "lubridate", "gganimate", "scales", "tigris", "sf", "tidycensus", "transformr", "xlsx")
library(ggplot2)
library(readr)
library(dplyr)
library(scales)
library(tidyverse)
library(tidycensus)
library(tigris)
library(stringr)
library(gganimate)
library(transformr)
library(readxl)
require(tidyr)
library(purrr)
library(purrrlyr)
library(xlsx)
download.file("https://data.cdc.gov/api/views/km4m-vcsb/rows.csv?accessType=DOWNLOAD", destfile = paste0(getwd(), "/natl_vaxrates.csv"))
download.file("https://data.cdc.gov/api/views/4ht3-nbmd/rows.csv?accessType=DOWNLOAD", destfile = paste0(getwd(), "/pregnant_vaxrates.csv"))
pregnant_vax_raw <-  read_csv("pregnant_vaxrates.csv",
col_types = cols(`Date Reported to CDC` = col_date(format = "%m/%d/%Y")))
natl_vax_raw <- read_csv("natl_vaxrates.csv",
col_types = cols(Date = col_date(format = "%m/%d/%Y")))
pregnant_vax_rates <- pregnant_vax_raw %>%
filter(`Race and Ethnicity` == "All Races/Ethnicity",
`Vaccination Coverage Status` == "Fully Vaccinated",
`Pregnancy Status at Vaccination` == "Any")
natl_vax_rates_1849 <- natl_vax_raw %>%
select(Date, Demographic_category, Series_Complete_Yes, Series_Complete_Pop_pct_agegroup) %>%
filter(Demographic_category %in% c("Ages_18-24_yrs", "Ages_25-39_yrs", "Ages_40-49_yrs")) %>%
mutate(denom = (100 * Series_Complete_Yes)/Series_Complete_Pop_pct_agegroup)
weekly_natl_vax <- natl_vax_rates_1849 %>%
group_by(Date) %>%
summarise(full_vax = sum(Series_Complete_Yes),
agegroup_pop = sum(denom)) %>%
mutate(pct_fully_vax = full_vax/agegroup_pop)
weekly_pregnant_vax <- pregnant_vax_rates %>%
select(`Date Reported to CDC`, `Vaccination Coverage Percentage (%)`) %>%
group_by(`Date Reported to CDC`)
natl_and_preg <- left_join(weekly_pregnant_vax, weekly_natl_vax, by = c("Date Reported to CDC" = "Date")) %>%
rename(date = `Date Reported to CDC`)
View(natl_and_preg)
natl_and_preg_clean <- natl_and_preg %>%
mutate(pct_fully_vax_final = 100*pct_fully_vax) %>%
rename("Percent fully vaccinated, people ages 18-49" = `Vaccination Coverage Percentage (%)`,
"People ages 18-49 who are pregnant or planning to become pregnant" = pct_fully_vax_final) %>%
select(date, `Percent fully vaccinated, people ages 18-49`, `People ages 18-49 who are pregnant or planning to become pregnant`)
nstall.packages("devtools")
install.packages("devtools")
library(devtools)
devtools::install_github("munichrocker/DatawRappr")
library(DatawRappr)
datawrapper_auth(api_key =  "PU52xuCQowgE5BFprvdnpFXzd5Ql9ISOSLBk58eNR2ykPztw0yC5fpqLTfsZdhyR")
dw_data_to_chart(natl_and_preg_clean, "Bhc9M")
install.packages("devtools")
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
install.packages("readxl", "stringr", "readr", "ggplot2", "tidyverse", "tidyr", "dplyr",
"readr", "lubridate", "gganimate", "scales", "tigris", "sf",
"tidycensus", "transformr", "xlsx")
library(ggplot2)
library(readr)
library(dplyr)
library(scales)
library(tidyverse)
library(tidycensus)
library(tigris)
library(stringr)
library(gganimate)
library(transformr)
library(readxl)
require(tidyr)
library(purrr)
library(purrrlyr)
library(xlsx)
install.packages("devtools")
library(devtools)
devtools::install_github("munichrocker/DatawRappr")
library(DatawRappr)
datawrapper_auth(api_key =  "PU52xuCQowgE5BFprvdnpFXzd5Ql9ISOSLBk58eNR2ykPztw0yC5fpqLTfsZdhyR")
install.packages("devtools")
install.packages("devtools")
devtools::install_github("munichrocker/DatawRappr", force = TRUE)
devtools::install_github("munichrocker/DatawRappr", force = TRUE)
library(DatawRappr)
install.packages("devtools")
library(devtools)
devtools::install_github("munichrocker/DatawRappr", force = TRUE)
download.file("https://data.cdc.gov/api/views/km4m-vcsb/rows.csv?accessType=DOWNLOAD", destfile = paste0(getwd(), "/natl_vax_kids_", currentDate, ".csv"))
download.file("https://data.cdc.gov/api/views/km4m-vcsb/rows.csv?accessType=DOWNLOAD", destfile = paste0(getwd(), "/natl_vax_kids", ".csv"))
download.file("https://data.cdc.gov/api/views/gxj9-t96f/rows.csv?accessType=DOWNLOAD", destfile = paste0(getwd(), "/age_overtime", ".csv"))
download.file("https://data.cdc.gov/api/views/8xkx-amqh/rows.csv?accessType=DOWNLOAD", destfile = paste0(getwd(), "/counties_overtime", ".csv"))
counties_overtime <- read_csv("COVID-19_Vaccinations_in_the_United_States_County.csv")
library(readr)
counties_overtime <- read_csv("counties_overtime.csv")
natl_vax_kids <- read_csv("natl_vax_kids.csv",
col_types = cols(Date = col_date(format = "%m/%d/%Y")))
agegroup_overtime <- read_csv("age_overtime.csv",
col_types = cols(`Date Administered` = col_datetime(format = "%m/%d/%Y %H:%M:%S AM")))
View(agegroup_overtime)
View(counties_overtime)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
install.packages("readxl", "stringr", "readr", "ggplot2", "tidyverse", "tidyr", "dplyr",
"readr", "lubridate", "gganimate", "scales", "tigris", "sf",
"tidycensus", "transformr", "xlsx")
download.file("https://data.cdc.gov/api/views/km4m-vcsb/rows.csv?accessType=DOWNLOAD", destfile = paste0(getwd(), "/natl_vax_kids", ".csv"))
download.file("https://data.cdc.gov/api/views/gxj9-t96f/rows.csv?accessType=DOWNLOAD", destfile = paste0(getwd(), "/age_overtime", ".csv"))
download.file("https://data.cdc.gov/api/views/8xkx-amqh/rows.csv?accessType=DOWNLOAD", destfile = paste0(getwd(), "/counties_overtime", ".csv"))
download.file("https://data.cdc.gov/api/views/8xkx-amqh/rows.csv?accessType=DOWNLOAD", destfile = paste0(getwd(), "/counties_overtime", ".csv"))
knitr::opts_chunk$set(echo = TRUE)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
install.packages("readxl", "stringr", "readr", "ggplot2", "tidyverse", "tidyr", "dplyr",
"readr", "lubridate", "gganimate", "scales", "tigris", "sf",
"tidycensus", "transformr", "xlsx")
library(ggplot2)
library(readr)
library(dplyr)
library(scales)
library(tidyverse)
library(tidycensus)
library(tigris)
library(stringr)
library(gganimate)
library(transformr)
library(readxl)
require(tidyr)
library(purrr)
library(purrrlyr)
library(xlsx)
install.packages("devtools")
library(devtools)
devtools::install_github("munichrocker/DatawRappr", force = TRUE)
counties_overtime <- read_csv("counties_overtime.csv")
library(readr)
counties_overtime <- read_csv("counties_overtime.csv")
natl_vax_kids <- read_csv("natl_vax_kids.csv",
col_types = cols(Date = col_date(format = "%m/%d/%Y")))
agegroup_overtime <- read_csv("age_overtime.csv",
col_types = cols(`Date Administered` = col_datetime(format = "%m/%d/%Y %H:%M:%S AM")))
glimpse(counties_overtime)
library(ggplot2)
library(readr)
library(dplyr)
library(scales)
library(tidyverse)
library(tidycensus)
library(tigris)
library(stringr)
library(gganimate)
library(transformr)
library(readxl)
require(tidyr)
library(purrr)
library(purrrlyr)
library(xlsx)
glimpse(counties_overtime)
kids_bycounty <- counties_overtime %>%
select(Date, FIPS, Recip_County, Recip_State, Series_Complete_5Plus, Series_Complete_12Plus, Series_Complete_18Plus, Series_Complete_5PlusPop_Pct, Series_Complete_12PlusPop_Pct, Series_Complete_18PlusPop_Pct) %>%
slice(which.max(Date))
View(kids_bycounty)
kids_bycounty <- counties_overtime %>%
select(Date, FIPS, Recip_County, Recip_State, Series_Complete_5Plus, Series_Complete_12Plus, Series_Complete_18Plus, Series_Complete_Yes, Series_Complete_5PlusPop_Pct, Series_Complete_12PlusPop_Pct, Series_Complete_18PlusPop_Pct) %>%
group_by(FIPS) %>%
filter(!is.na(Series_Complete_12Plus, Series_Complete_Yes, Series_Complete_5Plus, Series_Complete_18Plus)) %>%
slice(which.max(Date))
kids_bycounty <- counties_overtime %>%
select(Date, FIPS, Recip_County, Recip_State, Series_Complete_5Plus, Series_Complete_12Plus, Series_Complete_18Plus, Series_Complete_Yes, Series_Complete_5PlusPop_Pct, Series_Complete_12PlusPop_Pct, Series_Complete_18PlusPop_Pct) %>%
group_by(FIPS) %>%
filter(!is.na(Series_Complete_12Plus)) %>%
slice(which.max(Date))
View(kids_bycounty)
View(counties_overtime)
kids_bycounty <- counties_overtime %>%
select(Date, FIPS, Recip_County, Recip_State, Series_Complete_5Plus, Series_Complete_12Plus, Series_Complete_18Plus, Series_Complete_Yes, Series_Complete_5PlusPop_Pct, Series_Complete_12PlusPop_Pct, Series_Complete_18PlusPop_Pct) %>%
group_by(FIPS) %>%
slice(which.max(Date))
kids_bycounty <- counties_overtime %>%
select(Date, FIPS, Recip_County, Recip_State, Series_Complete_5Plus, Series_Complete_12Plus, Series_Complete_18Plus, Series_Complete_Yes, Series_Complete_5PlusPop_Pct, Series_Complete_12PlusPop_Pct, Series_Complete_18PlusPop_Pct) %>%
group_by(FIPS)
View(kids_bycounty)
glimpse(kids_bycounty)
glimpse(counties_overtime)
library(readr)
counties_overtime <- read_csv("counties_overtime.csv",
col_types = cols(Date = col_date(format = "%m/%d/%Y")))
View(counties_overtime)
kids_bycounty <- counties_overtime %>%
select(Date, FIPS, Recip_County, Recip_State, Series_Complete_5Plus, Series_Complete_12Plus, Series_Complete_18Plus, Series_Complete_Yes, Series_Complete_5PlusPop_Pct, Series_Complete_12PlusPop_Pct, Series_Complete_18PlusPop_Pct) %>%
group_by(FIPS) %>%
slice(which.max(Date))
View(kids_bycounty)
test <- kids_bycounty %>%
mutate(five_to_eleven = Series_Complete_5Plus - Series_Complete_12Plus,
kids_over_12 = Series_Complete_12Plus - Series_Complete_18Plus,
all_kids = Series_Complete_5Plus - Series_Complete_18Plus)
View(test)
test <- kids_bycounty %>%
mutate(five_to_eleven = Series_Complete_5Plus - Series_Complete_12Plus,
kids_over_12 = Series_Complete_12Plus - Series_Complete_18Plus,
all_kids = Series_Complete_5Plus - Series_Complete_18Plus,
test = Series_Complete_Yes - Series_Complete_5Plus)
funky_county_data <- test %>%
filter(test > 0)
View(funky_county_data)
View(counties_overtime)
download.file("https://data.cdc.gov/api/views/km4m-vcsb/rows.csv?accessType=DOWNLOAD", destfile = paste0(getwd(), "/natl_vax_kids", ".csv"))
download.file("https://data.cdc.gov/api/views/gxj9-t96f/rows.csv?accessType=DOWNLOAD", destfile = paste0(getwd(), "/age_overtime", ".csv"))
download.file("https://data.cdc.gov/api/views/8xkx-amqh/rows.csv?accessType=DOWNLOAD", destfile = paste0(getwd(), "/counties_overtime", ".csv"))
download.file("https://data.cdc.gov/api/views/8xkx-amqh/rows.csv?accessType=DOWNLOAD", destfile = paste0(getwd(), "/counties_overtime", ".csv"))
glimpse(counties_overtime)
counties_overtime <- read_csv("counties_overtime.csv",
col_types = cols(Date = col_date(format = "%m/%d/%Y")))
natl_vax_kids <- read_csv("natl_vax_kids.csv",
col_types = cols(Date = col_date(format = "%m/%d/%Y")))
agegroup_overtime <- read_csv("age_overtime.csv",
col_types = cols(`Date Administered` = col_datetime(format = "%m/%d/%Y %H:%M:%S AM")))
kids_bycounty <- counties_overtime %>%
select(Date, FIPS, Recip_County, Recip_State, Series_Complete_5Plus, Series_Complete_12Plus, Series_Complete_18Plus, Series_Complete_Yes, Series_Complete_5PlusPop_Pct, Series_Complete_12PlusPop_Pct, Series_Complete_18PlusPop_Pct, Completeness_pct) %>%
group_by(FIPS) %>%
slice(which.max(Date)) %>%
filter(Completeness_pct >= 75)
test <- kids_bycounty %>%
mutate(five_to_eleven = Series_Complete_5Plus - Series_Complete_12Plus,
kids_over_12 = Series_Complete_12Plus - Series_Complete_18Plus,
all_kids = Series_Complete_5Plus - Series_Complete_18Plus,
test = Series_Complete_Yes - Series_Complete_5Plus)
funky_county_data <- test %>%
filter(test > 0)
glimpse(counties_overtime)
# universe vs population--get pop figs from census and compare to derived denominators. is it eligible pop or pop and what pop figure are they using and which should we??
View(funky_county_data)
install.packages("tidycensus")
library(tidycensus)
counties <- get_acs(geography = "county",
variables = c(population = "B01001_001"),
year = 2020,
geometry = TRUE,
cb = FALSE,
shift_geo = TRUE)
counties <- get_acs(geography = "county",
variables = c(population = "B01001_001"),
year = 2019,
geometry = TRUE,
cb = FALSE,
shift_geo = TRUE)
census_api_key("f8317037669d0f6418c26725a1461b7d12c3472a", install = TRUE)
counties <- get_acs(geography = "county",
variables = c(population = "B01001_001"),
year = 2019,
geometry = TRUE,
cb = FALSE,
shift_geo = TRUE)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
install.packages("readxl", "stringr", "readr", "ggplot2", "tidyverse", "tidyr", "dplyr",
"readr", "lubridate", "gganimate", "scales", "tigris", "sf",
"tidycensus", "transformr", "xlsx")
library(ggplot2)
library(readr)
library(dplyr)
library(scales)
library(tidyverse)
library(tidycensus)
library(tigris)
library(stringr)
library(gganimate)
library(transformr)
require(tidyr)
library(purrr)
library(purrrlyr)
download.file("https://data.cdc.gov/api/views/km4m-vcsb/rows.csv?accessType=DOWNLOAD", destfile = paste0(getwd(), "/natl_vax_kids", ".csv"))
download.file("https://data.cdc.gov/api/views/gxj9-t96f/rows.csv?accessType=DOWNLOAD", destfile = paste0(getwd(), "/age_overtime", ".csv"))
download.file("https://data.cdc.gov/api/views/8xkx-amqh/rows.csv?accessType=DOWNLOAD", destfile = paste0(getwd(), "/counties_overtime", ".csv"))
source("~/github/kids-vaccines/vaccines-kids.Rmd")
source("~/github/kids-vaccines/vaccines-kids.Rmd")
source("~/github/kids-vaccines/vaccines-kids.Rmd")
download.file("https://gist.githubusercontent.com/Miserlou/c5cd8364bf9b2420bb29/raw/2bf258763cdddd704f8ffd3ea9a3e81d25e2c6f6/cities.json", destfile = paste(getwd(),"data/raw/cities.geojson"))
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
download.file("https://gist.githubusercontent.com/Miserlou/c5cd8364bf9b2420bb29/raw/2bf258763cdddd704f8ffd3ea9a3e81d25e2c6f6/cities.json", destfile = paste(getwd(),"data/raw/cities.geojson"))
download.file("https://gist.githubusercontent.com/Miserlou/c5cd8364bf9b2420bb29/raw/2bf258763cdddd704f8ffd3ea9a3e81d25e2c6f6/cities.json", destfile = paste0(getwd(),"/data/raw/cities.geojson"))
